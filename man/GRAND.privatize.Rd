% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GRAND.R
\name{GRAND.privatize}
\alias{GRAND.privatize}
\title{GRAND Privatization of Network Data}
\usage{
GRAND.privatize(
  A,
  K,
  idx,
  eps = 1,
  oracle.dt = NULL,
  model = c("LSM", "RDPG"),
  niter = 500,
  rho = 0.05
)
}
\arguments{
\item{A}{Matrix. Adjacency matrix of the input network.}

\item{K}{Integer. Dimension of the latent space for network embedding.}

\item{idx}{Integer vector. Indices of nodes to be privatized.}

\item{eps}{Numeric or vector. Privacy budget parameter(s) for differential privacy. Default is 1.}

\item{oracle.dt}{List. Optional oracle data containing true parameters for comparison. Default is NULL.}

\item{model}{Character. Model type, either "LSM" (Latent Space Model) or "RDPG" (Random Dot Product Graph). Default is "LSM".}

\item{niter}{Integer. Number of iterations for the optimization algorithm. Default is 500.}

\item{rho}{Numeric. Parameter controlling the neighborhood size for conditional distributions. Default is 0.05.}
}
\value{
A list containing:
\itemize{
  \item non.private.result: Results without privacy (original and estimated data)
  \item GRAND.result: Results from GRAND privatization method
  \item Laplace.result: Results from baseline Laplace mechanism
  \item eps: Privacy parameters used
  \item oracle.result: Oracle comparison results (if oracle.dt provided)
}
}
\description{
Applies the GRAND (Graph Release with Assured Node Differential Privacy) method
to privatize network data using differential privacy. The method estimates latent positions
from the network and applies multivariate differential privacy to protect sensitive information.
}
\details{
GRAND: Graph Release with Assured Node Differential Privacy
}
\examples{
# Generate a sample network
net <- LSM.Gen(n = 1000, k = 2, K = 3)
# Privatize the first 500 nodes with epsilon = 1
result <- GRAND.privatize(A = net$A, K = 2, idx = 1:500, eps = 1)
}
